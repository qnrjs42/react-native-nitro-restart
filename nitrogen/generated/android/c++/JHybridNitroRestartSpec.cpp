///
/// JHybridNitroRestartSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridNitroRestartSpec.hpp"





namespace margelo::nitro::restart {

  jni::local_ref<JHybridNitroRestartSpec::jhybriddata> JHybridNitroRestartSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridNitroRestartSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridNitroRestartSpec::initHybrid),
    });
  }

  size_t JHybridNitroRestartSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  void JHybridNitroRestartSpec::dispose() noexcept {
    static const auto method = javaClassStatic()->getMethod<void()>("dispose");
    method(_javaPart);
  }

  // Properties
  

  // Methods
  void JHybridNitroRestartSpec::restartApp() {
    static const auto method = javaClassStatic()->getMethod<void()>("restartApp");
    method(_javaPart);
  }
  void JHybridNitroRestartSpec::exitApp() {
    static const auto method = javaClassStatic()->getMethod<void()>("exitApp");
    method(_javaPart);
  }

} // namespace margelo::nitro::restart
