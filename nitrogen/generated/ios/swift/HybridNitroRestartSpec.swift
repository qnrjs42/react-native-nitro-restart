///
/// HybridNitroRestartSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroRestartSpec``
public protocol HybridNitroRestartSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func restartApp() throws -> Void
  func exitApp() throws -> Void
}

/// See ``HybridNitroRestartSpec``
open class HybridNitroRestartSpec_base {
  private weak var cxxWrapper: HybridNitroRestartSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridNitroRestartSpec_cxx {
  #if DEBUG
    guard self is HybridNitroRestartSpec else {
      fatalError("`self` is not a `HybridNitroRestartSpec`! Did you accidentally inherit from `HybridNitroRestartSpec_base` instead of `HybridNitroRestartSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroRestartSpec_cxx(self as! HybridNitroRestartSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroRestart HybridObject.
 * Implement this protocol to create Swift-based instances of NitroRestart.
 * ```swift
 * class HybridNitroRestart : HybridNitroRestartSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroRestartSpec = HybridNitroRestartSpec_protocol & HybridNitroRestartSpec_base
