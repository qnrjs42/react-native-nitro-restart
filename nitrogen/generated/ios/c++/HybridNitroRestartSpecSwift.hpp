///
/// HybridNitroRestartSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridNitroRestartSpec.hpp"

// Forward declaration of `HybridNitroRestartSpec_cxx` to properly resolve imports.
namespace NitroRestart { class HybridNitroRestartSpec_cxx; }





#include "NitroRestart-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::restart {

  /**
   * The C++ part of HybridNitroRestartSpec_cxx.swift.
   *
   * HybridNitroRestartSpecSwift (C++) accesses HybridNitroRestartSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridNitroRestartSpec_cxx can directly inherit from the C++ class HybridNitroRestartSpec
   * to simplify the whole structure and memory management.
   */
  class HybridNitroRestartSpecSwift: public virtual HybridNitroRestartSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridNitroRestartSpecSwift(const NitroRestart::HybridNitroRestartSpec_cxx& swiftPart):
      HybridObject(HybridNitroRestartSpec::TAG),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline NitroRestart::HybridNitroRestartSpec_cxx& getSwiftPart() noexcept {
      return _swiftPart;
    }

  public:
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }
    void dispose() noexcept override {
      _swiftPart.dispose();
    }

  public:
    // Properties
    

  public:
    // Methods
    inline void restartApp() override {
      auto __result = _swiftPart.restartApp();
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
    }
    inline void exitApp() override {
      auto __result = _swiftPart.exitApp();
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
    }

  private:
    NitroRestart::HybridNitroRestartSpec_cxx _swiftPart;
  };

} // namespace margelo::nitro::restart
